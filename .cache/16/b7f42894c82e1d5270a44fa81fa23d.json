{"id":"node_modules/@aws-sdk/smithy-client/dist/es/command.js","dependencies":[{"name":"/Users/shehanprasanna/Desktop/CeylonHub/github-basics-shehanp12/frontend/package.json","includedInParent":true,"mtime":1633769564558},{"name":"/Users/shehanprasanna/Desktop/CeylonHub/github-basics-shehanp12/frontend/node_modules/@aws-sdk/smithy-client/package.json","includedInParent":true,"mtime":1629572197031},{"name":"@aws-sdk/middleware-stack","loc":{"line":1,"column":31},"parent":"/Users/shehanprasanna/Desktop/CeylonHub/github-basics-shehanp12/frontend/node_modules/@aws-sdk/smithy-client/dist/es/command.js","resolved":"/Users/shehanprasanna/Desktop/CeylonHub/github-basics-shehanp12/frontend/node_modules/@aws-sdk/middleware-stack/dist/es/index.js"}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Command = void 0;\n\nvar _middlewareStack = require(\"@aws-sdk/middleware-stack\");\n\nvar Command = function () {\n  function Command() {\n    this.middlewareStack = (0, _middlewareStack.constructStack)();\n  }\n\n  return Command;\n}();\n\nexports.Command = Command;"},"sourceMaps":{"js":{"mappings":[{"source":"../../src/command.ts","name":null,"original":{"line":1,"column":0},"generated":{"line":8,"column":0}},{"source":"../../src/command.ts","name":null,"original":{"line":4,"column":0},"generated":{"line":10,"column":0}},{"source":"../../src/command.ts","name":null,"original":{"line":4,"column":0},"generated":{"line":10,"column":4}},{"source":"../../src/command.ts","name":null,"original":{"line":4,"column":0},"generated":{"line":10,"column":11}},{"source":"../../src/command.ts","name":null,"original":{"line":4,"column":0},"generated":{"line":10,"column":14}},{"source":"../../src/command.ts","name":null,"original":{"line":4,"column":0},"generated":{"line":10,"column":26}},{"source":"../../src/command.ts","name":null,"original":{"line":4,"column":0},"generated":{"line":11,"column":0}},{"source":"../../src/command.ts","name":null,"original":{"line":4,"column":0},"generated":{"line":11,"column":11}},{"source":"../../src/command.ts","name":null,"original":{"line":4,"column":0},"generated":{"line":11,"column":18}},{"source":"../../src/command.ts","name":null,"original":{"line":4,"column":0},"generated":{"line":11,"column":21}},{"source":"../../src/command.ts","name":null,"original":{"line":12,"column":11},"generated":{"line":12,"column":0}},{"source":"../../src/command.ts","name":null,"original":{"line":12,"column":11},"generated":{"line":12,"column":9}},{"source":"../../src/command.ts","name":null,"original":{"line":12,"column":11},"generated":{"line":12,"column":24}},{"source":"../../src/command.ts","name":null,"original":{"line":12,"column":62},"generated":{"line":12,"column":27}},{"source":"../../src/command.ts","name":null,"original":{"line":12,"column":11},"generated":{"line":12,"column":65}},{"source":"../../src/command.ts","name":null,"original":{"line":18,"column":1},"generated":{"line":13,"column":0}},{"source":"../../src/command.ts","name":null,"original":{"line":18,"column":0},"generated":{"line":15,"column":0}},{"source":"../../src/command.ts","name":null,"original":{"line":18,"column":0},"generated":{"line":15,"column":9}},{"source":"../../src/command.ts","name":null,"original":{"line":18,"column":0},"generated":{"line":15,"column":16}},{"source":"../../src/command.ts","name":null,"original":{"line":4,"column":0},"generated":{"line":16,"column":0}},{"source":"../../src/command.ts","name":null,"original":{"line":4,"column":0},"generated":{"line":16,"column":1}},{"source":"../../src/command.ts","name":null,"original":{"line":4,"column":0},"generated":{"line":16,"column":3}}],"sources":{"../../src/command.ts":"import { constructStack } from \"@aws-sdk/middleware-stack\";\nimport { Command as ICommand, Handler, MetadataBearer, MiddlewareStack as IMiddlewareStack } from \"@aws-sdk/types\";\n\nexport abstract class Command<\n  Input extends ClientInput,\n  Output extends ClientOutput,\n  ResolvedClientConfiguration,\n  ClientInput extends object = any,\n  ClientOutput extends MetadataBearer = any\n> implements ICommand<ClientInput, Input, ClientOutput, Output, ResolvedClientConfiguration> {\n  abstract input: Input;\n  readonly middlewareStack: IMiddlewareStack<Input, Output> = constructStack<Input, Output>();\n  abstract resolveMiddleware(\n    stack: IMiddlewareStack<ClientInput, ClientOutput>,\n    configuration: ResolvedClientConfiguration,\n    options: any\n  ): Handler<Input, Output>;\n}\n"},"lineCount":null}},"error":null,"hash":"d95e34114b79033b37eae0202cec9dd5","cacheData":{"env":{}}}