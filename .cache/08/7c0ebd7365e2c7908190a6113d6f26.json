{"id":"node_modules/@aws-sdk/middleware-retry/dist/es/constants.js","dependencies":[{"name":"/Users/shehanprasanna/Desktop/CeylonHub/github-basics-shehanp12/frontend/package.json","includedInParent":true,"mtime":1633769564558},{"name":"/Users/shehanprasanna/Desktop/CeylonHub/github-basics-shehanp12/frontend/node_modules/@aws-sdk/middleware-retry/package.json","includedInParent":true,"mtime":1629572196899}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.REQUEST_HEADER = exports.INVOCATION_ID_HEADER = exports.NO_RETRY_INCREMENT = exports.TIMEOUT_RETRY_COST = exports.RETRY_COST = exports.INITIAL_RETRY_TOKENS = exports.THROTTLING_RETRY_DELAY_BASE = exports.MAXIMUM_RETRY_DELAY = exports.DEFAULT_RETRY_DELAY_BASE = void 0;\n\n/**\n * The base number of milliseconds to use in calculating a suitable cool-down\n * time when a retryable error is encountered.\n */\nvar DEFAULT_RETRY_DELAY_BASE = 100;\n/**\n * The maximum amount of time (in milliseconds) that will be used as a delay\n * between retry attempts.\n */\n\nexports.DEFAULT_RETRY_DELAY_BASE = DEFAULT_RETRY_DELAY_BASE;\nvar MAXIMUM_RETRY_DELAY = 20 * 1000;\n/**\n * The retry delay base (in milliseconds) to use when a throttling error is\n * encountered.\n */\n\nexports.MAXIMUM_RETRY_DELAY = MAXIMUM_RETRY_DELAY;\nvar THROTTLING_RETRY_DELAY_BASE = 500;\n/**\n * Initial number of retry tokens in Retry Quota\n */\n\nexports.THROTTLING_RETRY_DELAY_BASE = THROTTLING_RETRY_DELAY_BASE;\nvar INITIAL_RETRY_TOKENS = 500;\n/**\n * The total amount of retry tokens to be decremented from retry token balance.\n */\n\nexports.INITIAL_RETRY_TOKENS = INITIAL_RETRY_TOKENS;\nvar RETRY_COST = 5;\n/**\n * The total amount of retry tokens to be decremented from retry token balance\n * when a throttling error is encountered.\n */\n\nexports.RETRY_COST = RETRY_COST;\nvar TIMEOUT_RETRY_COST = 10;\n/**\n * The total amount of retry token to be incremented from retry token balance\n * if an SDK operation invocation succeeds without requiring a retry request.\n */\n\nexports.TIMEOUT_RETRY_COST = TIMEOUT_RETRY_COST;\nvar NO_RETRY_INCREMENT = 1;\n/**\n * Header name for SDK invocation ID\n */\n\nexports.NO_RETRY_INCREMENT = NO_RETRY_INCREMENT;\nvar INVOCATION_ID_HEADER = \"amz-sdk-invocation-id\";\n/**\n * Header name for request retry information.\n */\n\nexports.INVOCATION_ID_HEADER = INVOCATION_ID_HEADER;\nvar REQUEST_HEADER = \"amz-sdk-request\";\nexports.REQUEST_HEADER = REQUEST_HEADER;"},"sourceMaps":{"js":{"mappings":[{"source":"../../src/constants.ts","name":null,"original":{"line":1,"column":0},"generated":{"line":8,"column":0}},{"source":"../../src/constants.ts","name":null,"original":{"line":5,"column":7},"generated":{"line":12,"column":0}},{"source":"../../src/constants.ts","name":null,"original":{"line":5,"column":13},"generated":{"line":12,"column":4}},{"source":"../../src/constants.ts","name":null,"original":{"line":5,"column":37},"generated":{"line":12,"column":28}},{"source":"../../src/constants.ts","name":null,"original":{"line":5,"column":40},"generated":{"line":12,"column":31}},{"source":"../../src/constants.ts","name":null,"original":{"line":5,"column":7},"generated":{"line":12,"column":34}},{"source":"../../src/constants.ts","name":null,"original":{"line":7,"column":0},"generated":{"line":13,"column":0}},{"source":"../../src/constants.ts","name":null,"original":{"line":11,"column":7},"generated":{"line":19,"column":0}},{"source":"../../src/constants.ts","name":null,"original":{"line":11,"column":13},"generated":{"line":19,"column":4}},{"source":"../../src/constants.ts","name":null,"original":{"line":11,"column":32},"generated":{"line":19,"column":23}},{"source":"../../src/constants.ts","name":null,"original":{"line":11,"column":35},"generated":{"line":19,"column":26}},{"source":"../../src/constants.ts","name":null,"original":{"line":11,"column":40},"generated":{"line":19,"column":31}},{"source":"../../src/constants.ts","name":null,"original":{"line":11,"column":7},"generated":{"line":19,"column":35}},{"source":"../../src/constants.ts","name":null,"original":{"line":13,"column":0},"generated":{"line":20,"column":0}},{"source":"../../src/constants.ts","name":null,"original":{"line":17,"column":7},"generated":{"line":26,"column":0}},{"source":"../../src/constants.ts","name":null,"original":{"line":17,"column":13},"generated":{"line":26,"column":4}},{"source":"../../src/constants.ts","name":null,"original":{"line":17,"column":40},"generated":{"line":26,"column":31}},{"source":"../../src/constants.ts","name":null,"original":{"line":17,"column":43},"generated":{"line":26,"column":34}},{"source":"../../src/constants.ts","name":null,"original":{"line":17,"column":7},"generated":{"line":26,"column":37}},{"source":"../../src/constants.ts","name":null,"original":{"line":19,"column":0},"generated":{"line":27,"column":0}},{"source":"../../src/constants.ts","name":null,"original":{"line":22,"column":7},"generated":{"line":32,"column":0}},{"source":"../../src/constants.ts","name":null,"original":{"line":22,"column":13},"generated":{"line":32,"column":4}},{"source":"../../src/constants.ts","name":null,"original":{"line":22,"column":33},"generated":{"line":32,"column":24}},{"source":"../../src/constants.ts","name":null,"original":{"line":22,"column":36},"generated":{"line":32,"column":27}},{"source":"../../src/constants.ts","name":null,"original":{"line":22,"column":7},"generated":{"line":32,"column":30}},{"source":"../../src/constants.ts","name":null,"original":{"line":24,"column":0},"generated":{"line":33,"column":0}},{"source":"../../src/constants.ts","name":null,"original":{"line":27,"column":7},"generated":{"line":38,"column":0}},{"source":"../../src/constants.ts","name":null,"original":{"line":27,"column":13},"generated":{"line":38,"column":4}},{"source":"../../src/constants.ts","name":null,"original":{"line":27,"column":23},"generated":{"line":38,"column":14}},{"source":"../../src/constants.ts","name":null,"original":{"line":27,"column":26},"generated":{"line":38,"column":17}},{"source":"../../src/constants.ts","name":null,"original":{"line":27,"column":7},"generated":{"line":38,"column":18}},{"source":"../../src/constants.ts","name":null,"original":{"line":29,"column":0},"generated":{"line":39,"column":0}},{"source":"../../src/constants.ts","name":null,"original":{"line":33,"column":7},"generated":{"line":45,"column":0}},{"source":"../../src/constants.ts","name":null,"original":{"line":33,"column":13},"generated":{"line":45,"column":4}},{"source":"../../src/constants.ts","name":null,"original":{"line":33,"column":31},"generated":{"line":45,"column":22}},{"source":"../../src/constants.ts","name":null,"original":{"line":33,"column":34},"generated":{"line":45,"column":25}},{"source":"../../src/constants.ts","name":null,"original":{"line":33,"column":7},"generated":{"line":45,"column":27}},{"source":"../../src/constants.ts","name":null,"original":{"line":35,"column":0},"generated":{"line":46,"column":0}},{"source":"../../src/constants.ts","name":null,"original":{"line":39,"column":7},"generated":{"line":52,"column":0}},{"source":"../../src/constants.ts","name":null,"original":{"line":39,"column":13},"generated":{"line":52,"column":4}},{"source":"../../src/constants.ts","name":null,"original":{"line":39,"column":31},"generated":{"line":52,"column":22}},{"source":"../../src/constants.ts","name":null,"original":{"line":39,"column":34},"generated":{"line":52,"column":25}},{"source":"../../src/constants.ts","name":null,"original":{"line":39,"column":7},"generated":{"line":52,"column":26}},{"source":"../../src/constants.ts","name":null,"original":{"line":41,"column":0},"generated":{"line":53,"column":0}},{"source":"../../src/constants.ts","name":null,"original":{"line":44,"column":7},"generated":{"line":58,"column":0}},{"source":"../../src/constants.ts","name":null,"original":{"line":44,"column":13},"generated":{"line":58,"column":4}},{"source":"../../src/constants.ts","name":null,"original":{"line":44,"column":33},"generated":{"line":58,"column":24}},{"source":"../../src/constants.ts","name":null,"original":{"line":44,"column":36},"generated":{"line":58,"column":27}},{"source":"../../src/constants.ts","name":null,"original":{"line":44,"column":7},"generated":{"line":58,"column":50}},{"source":"../../src/constants.ts","name":null,"original":{"line":46,"column":0},"generated":{"line":59,"column":0}},{"source":"../../src/constants.ts","name":null,"original":{"line":49,"column":7},"generated":{"line":64,"column":0}},{"source":"../../src/constants.ts","name":null,"original":{"line":49,"column":13},"generated":{"line":64,"column":4}},{"source":"../../src/constants.ts","name":null,"original":{"line":49,"column":27},"generated":{"line":64,"column":18}},{"source":"../../src/constants.ts","name":null,"original":{"line":49,"column":30},"generated":{"line":64,"column":21}},{"source":"../../src/constants.ts","name":null,"original":{"line":49,"column":7},"generated":{"line":64,"column":38}}],"sources":{"../../src/constants.ts":"/**\n * The base number of milliseconds to use in calculating a suitable cool-down\n * time when a retryable error is encountered.\n */\nexport const DEFAULT_RETRY_DELAY_BASE = 100;\n\n/**\n * The maximum amount of time (in milliseconds) that will be used as a delay\n * between retry attempts.\n */\nexport const MAXIMUM_RETRY_DELAY = 20 * 1000;\n\n/**\n * The retry delay base (in milliseconds) to use when a throttling error is\n * encountered.\n */\nexport const THROTTLING_RETRY_DELAY_BASE = 500;\n\n/**\n * Initial number of retry tokens in Retry Quota\n */\nexport const INITIAL_RETRY_TOKENS = 500;\n\n/**\n * The total amount of retry tokens to be decremented from retry token balance.\n */\nexport const RETRY_COST = 5;\n\n/**\n * The total amount of retry tokens to be decremented from retry token balance\n * when a throttling error is encountered.\n */\nexport const TIMEOUT_RETRY_COST = 10;\n\n/**\n * The total amount of retry token to be incremented from retry token balance\n * if an SDK operation invocation succeeds without requiring a retry request.\n */\nexport const NO_RETRY_INCREMENT = 1;\n\n/**\n * Header name for SDK invocation ID\n */\nexport const INVOCATION_ID_HEADER = \"amz-sdk-invocation-id\";\n\n/**\n * Header name for request retry information.\n */\nexport const REQUEST_HEADER = \"amz-sdk-request\";\n"},"lineCount":null}},"error":null,"hash":"283daa8f6f0f1a0765c67fa5f64569ba","cacheData":{"env":{}}}