{"id":"node_modules/@aws-sdk/client-lex-runtime-service/dist/es/commands/PostContentCommand.js","dependencies":[{"name":"/Users/shehanprasanna/Desktop/CeylonHub/github-basics-shehanp12/frontend/node_modules/@aws-sdk/client-lex-runtime-service/dist/es/commands/PostContentCommand.js.map","includedInParent":true,"mtime":499162500000},{"name":"/Users/shehanprasanna/Desktop/CeylonHub/github-basics-shehanp12/frontend/node_modules/@aws-sdk/client-lex-runtime-service/commands/PostContentCommand.ts","includedInParent":true,"mtime":499162500000},{"name":"/Users/shehanprasanna/Desktop/CeylonHub/github-basics-shehanp12/frontend/package.json","includedInParent":true,"mtime":1633769564558},{"name":"/Users/shehanprasanna/Desktop/CeylonHub/github-basics-shehanp12/frontend/node_modules/@aws-sdk/client-lex-runtime-service/dist/es/package.json","includedInParent":true,"mtime":499162500000},{"name":"tslib","loc":{"line":1,"column":26},"parent":"/Users/shehanprasanna/Desktop/CeylonHub/github-basics-shehanp12/frontend/node_modules/@aws-sdk/client-lex-runtime-service/dist/es/commands/PostContentCommand.js","resolved":"/Users/shehanprasanna/Desktop/CeylonHub/github-basics-shehanp12/frontend/node_modules/@aws-sdk/client-lex-runtime-service/node_modules/tslib/tslib.es6.js"},{"name":"../models/models_0","loc":{"line":2,"column":56},"parent":"/Users/shehanprasanna/Desktop/CeylonHub/github-basics-shehanp12/frontend/node_modules/@aws-sdk/client-lex-runtime-service/dist/es/commands/PostContentCommand.js","resolved":"/Users/shehanprasanna/Desktop/CeylonHub/github-basics-shehanp12/frontend/node_modules/@aws-sdk/client-lex-runtime-service/dist/es/models/models_0.js"},{"name":"../protocols/Aws_restJson1","loc":{"line":3,"column":102},"parent":"/Users/shehanprasanna/Desktop/CeylonHub/github-basics-shehanp12/frontend/node_modules/@aws-sdk/client-lex-runtime-service/dist/es/commands/PostContentCommand.js","resolved":"/Users/shehanprasanna/Desktop/CeylonHub/github-basics-shehanp12/frontend/node_modules/@aws-sdk/client-lex-runtime-service/dist/es/protocols/Aws_restJson1.js"},{"name":"@aws-sdk/middleware-serde","loc":{"line":4,"column":31},"parent":"/Users/shehanprasanna/Desktop/CeylonHub/github-basics-shehanp12/frontend/node_modules/@aws-sdk/client-lex-runtime-service/dist/es/commands/PostContentCommand.js","resolved":"/Users/shehanprasanna/Desktop/CeylonHub/github-basics-shehanp12/frontend/node_modules/@aws-sdk/middleware-serde/dist/es/index.js"},{"name":"@aws-sdk/smithy-client","loc":{"line":5,"column":36},"parent":"/Users/shehanprasanna/Desktop/CeylonHub/github-basics-shehanp12/frontend/node_modules/@aws-sdk/client-lex-runtime-service/dist/es/commands/PostContentCommand.js","resolved":"/Users/shehanprasanna/Desktop/CeylonHub/github-basics-shehanp12/frontend/node_modules/@aws-sdk/smithy-client/dist/es/index.js"}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.PostContentCommand = void 0;\n\nvar _tslib = require(\"tslib\");\n\nvar _models_ = require(\"../models/models_0\");\n\nvar _Aws_restJson = require(\"../protocols/Aws_restJson1\");\n\nvar _middlewareSerde = require(\"@aws-sdk/middleware-serde\");\n\nvar _smithyClient = require(\"@aws-sdk/smithy-client\");\n\n/**\n * <p> Sends user input (text or speech) to Amazon Lex. Clients use this API to send text and audio\n *       requests to Amazon Lex at runtime. Amazon Lex interprets the user input using the machine learning model\n *       that it built for the bot. </p>\n *          <p>The <code>PostContent</code> operation supports audio input at 8kHz and 16kHz. You can use\n *       8kHz audio to achieve higher speech recognition accuracy in telephone audio applications. </p>\n *          <p> In response, Amazon Lex returns the next message to convey to the user. Consider the following\n *       example messages: </p>\n *          <ul>\n *             <li>\n *                <p> For a user input \"I would like a pizza,\" Amazon Lex might return a response with a message\n *           eliciting slot data (for example, <code>PizzaSize</code>): \"What size pizza would you\n *           like?\". </p>\n *             </li>\n *             <li>\n *                <p> After the user provides all of the pizza order information, Amazon Lex might return a\n *           response with a message to get user confirmation: \"Order the pizza?\". </p>\n *             </li>\n *             <li>\n *                <p> After the user replies \"Yes\" to the confirmation prompt, Amazon Lex might return a\n *           conclusion statement: \"Thank you, your cheese pizza has been ordered.\". </p>\n *             </li>\n *          </ul>\n *          <p> Not all Amazon Lex messages require a response from the user. For example, conclusion\n *       statements do not require a response. Some messages require only a yes or no response. In\n *       addition to the <code>message</code>, Amazon Lex provides additional context about the message in\n *       the response that you can use to enhance client behavior, such as displaying the appropriate\n *       client user interface. Consider the following examples: </p>\n *          <ul>\n *             <li>\n *                <p> If the message is to elicit slot data, Amazon Lex returns the following context\n *           information: </p>\n *                <ul>\n *                   <li>\n *                      <p>\n *                         <code>x-amz-lex-dialog-state</code> header set to <code>ElicitSlot</code>\n *                      </p>\n *                   </li>\n *                   <li>\n *                      <p>\n *                         <code>x-amz-lex-intent-name</code> header set to the intent name in the current\n *               context </p>\n *                   </li>\n *                   <li>\n *                      <p>\n *                         <code>x-amz-lex-slot-to-elicit</code> header set to the slot name for which the\n *                 <code>message</code> is eliciting information </p>\n *                   </li>\n *                   <li>\n *                      <p>\n *                         <code>x-amz-lex-slots</code> header set to a map of slots configured for the intent\n *               with their current values </p>\n *                   </li>\n *                </ul>\n *             </li>\n *             <li>\n *                <p> If the message is a confirmation prompt, the <code>x-amz-lex-dialog-state</code>\n *           header is set to <code>Confirmation</code> and the <code>x-amz-lex-slot-to-elicit</code>\n *           header is omitted. </p>\n *             </li>\n *             <li>\n *                <p> If the message is a clarification prompt configured for the intent, indicating that\n *           the user intent is not understood, the <code>x-amz-dialog-state</code> header is set to\n *             <code>ElicitIntent</code> and the <code>x-amz-slot-to-elicit</code> header is omitted.\n *         </p>\n *             </li>\n *          </ul>\n *          <p> In addition, Amazon Lex also returns your application-specific <code>sessionAttributes</code>.\n *       For more information, see <a href=\"https://docs.aws.amazon.com/lex/latest/dg/context-mgmt.html\">Managing Conversation Context</a>. </p>\n */\nvar PostContentCommand = function (_super) {\n  (0, _tslib.__extends)(PostContentCommand, _super); // Start section: command_properties\n  // End section: command_properties\n\n  function PostContentCommand(input) {\n    var _this = // Start section: command_constructor\n    _super.call(this) || this;\n\n    _this.input = input;\n    return _this; // End section: command_constructor\n  }\n  /**\n   * @internal\n   */\n\n\n  PostContentCommand.prototype.resolveMiddleware = function (clientStack, configuration, options) {\n    this.middlewareStack.use((0, _middlewareSerde.getSerdePlugin)(configuration, this.serialize, this.deserialize));\n    var stack = clientStack.concat(this.middlewareStack);\n    var logger = configuration.logger;\n    var clientName = \"LexRuntimeServiceClient\";\n    var commandName = \"PostContentCommand\";\n    var handlerExecutionContext = {\n      logger: logger,\n      clientName: clientName,\n      commandName: commandName,\n      inputFilterSensitiveLog: _models_.PostContentRequest.filterSensitiveLog,\n      outputFilterSensitiveLog: _models_.PostContentResponse.filterSensitiveLog\n    };\n    var requestHandler = configuration.requestHandler;\n    return stack.resolve(function (request) {\n      return requestHandler.handle(request.request, options || {});\n    }, handlerExecutionContext);\n  };\n\n  PostContentCommand.prototype.serialize = function (input, context) {\n    return (0, _Aws_restJson.serializeAws_restJson1PostContentCommand)(input, context);\n  };\n\n  PostContentCommand.prototype.deserialize = function (output, context) {\n    return (0, _Aws_restJson.deserializeAws_restJson1PostContentCommand)(output, context);\n  };\n\n  return PostContentCommand;\n}(_smithyClient.Command);\n\nexports.PostContentCommand = PostContentCommand;"},"sourceMaps":{"js":{"mappings":[{"source":"../../../commands/PostContentCommand.ts","name":null,"original":{"line":6,"column":0},"generated":{"line":10,"column":0}},{"source":"../../../commands/PostContentCommand.ts","name":null,"original":{"line":7,"column":0},"generated":{"line":12,"column":0}},{"source":"../../../commands/PostContentCommand.ts","name":null,"original":{"line":11,"column":0},"generated":{"line":14,"column":0}},{"source":"../../../commands/PostContentCommand.ts","name":null,"original":{"line":13,"column":0},"generated":{"line":16,"column":0}},{"source":"../../../commands/PostContentCommand.ts","name":null,"original":{"line":29,"column":0},"generated":{"line":18,"column":0}},{"source":"../../../commands/PostContentCommand.ts","name":null,"original":{"line":99,"column":0},"generated":{"line":88,"column":0}},{"source":"../../../commands/PostContentCommand.ts","name":null,"original":{"line":99,"column":0},"generated":{"line":88,"column":4}},{"source":"../../../commands/PostContentCommand.ts","name":null,"original":{"line":99,"column":0},"generated":{"line":88,"column":22}},{"source":"../../../commands/PostContentCommand.ts","name":null,"original":{"line":99,"column":0},"generated":{"line":88,"column":25}},{"source":"../../../commands/PostContentCommand.ts","name":null,"original":{"line":99,"column":0},"generated":{"line":88,"column":35}},{"source":"../../../commands/PostContentCommand.ts","name":null,"original":{"line":99,"column":0},"generated":{"line":88,"column":41}},{"source":"../../../commands/PostContentCommand.ts","name":null,"original":{"line":99,"column":0},"generated":{"line":88,"column":43}},{"source":"../../../commands/PostContentCommand.ts","name":null,"original":{"line":99,"column":40},"generated":{"line":89,"column":0}},{"source":"../../../commands/PostContentCommand.ts","name":null,"original":{"line":99,"column":40},"generated":{"line":89,"column":24}},{"source":"../../../commands/PostContentCommand.ts","name":null,"original":{"line":99,"column":40},"generated":{"line":89,"column":42}},{"source":"../../../commands/PostContentCommand.ts","name":null,"original":{"line":99,"column":40},"generated":{"line":89,"column":44}},{"source":"../../../commands/PostContentCommand.ts","name":null,"original":{"line":99,"column":40},"generated":{"line":89,"column":50}},{"source":"../../../commands/PostContentCommand.ts","name":null,"original":{"line":99,"column":0},"generated":{"line":89,"column":52}},{"source":"../../../commands/PostContentCommand.ts","name":null,"original":{"line":104,"column":2},"generated":{"line":89,"column":53}},{"source":"../../../commands/PostContentCommand.ts","name":null,"original":{"line":105,"column":2},"generated":{"line":90,"column":0}},{"source":"../../../commands/PostContentCommand.ts","name":null,"original":{"line":107,"column":2},"generated":{"line":92,"column":0}},{"source":"../../../commands/PostContentCommand.ts","name":null,"original":{"line":107,"column":2},"generated":{"line":92,"column":11}},{"source":"../../../commands/PostContentCommand.ts","name":null,"original":{"line":107,"column":2},"generated":{"line":92,"column":29}},{"source":"../../../commands/PostContentCommand.ts","name":null,"original":{"line":107,"column":23},"generated":{"line":92,"column":30}},{"source":"../../../commands/PostContentCommand.ts","name":null,"original":{"line":107,"column":2},"generated":{"line":92,"column":35}},{"source":"../../../commands/PostContentCommand.ts","name":null,"original":{"line":107,"column":53},"generated":{"line":92,"column":37}},{"source":"../../../commands/PostContentCommand.ts","name":null,"original":{"line":107,"column":2},"generated":{"line":93,"column":0}},{"source":"../../../commands/PostContentCommand.ts","name":null,"original":{"line":107,"column":2},"generated":{"line":93,"column":8}},{"source":"../../../commands/PostContentCommand.ts","name":null,"original":{"line":107,"column":2},"generated":{"line":93,"column":13}},{"source":"../../../commands/PostContentCommand.ts","name":null,"original":{"line":108,"column":4},"generated":{"line":93,"column":16}},{"source":"../../../commands/PostContentCommand.ts","name":null,"original":{"line":109,"column":4},"generated":{"line":94,"column":0}},{"source":"../../../commands/PostContentCommand.ts","name":null,"original":{"line":109,"column":4},"generated":{"line":94,"column":4}},{"source":"../../../commands/PostContentCommand.ts","name":null,"original":{"line":109,"column":4},"generated":{"line":94,"column":10}},{"source":"../../../commands/PostContentCommand.ts","name":null,"original":{"line":109,"column":4},"generated":{"line":94,"column":11}},{"source":"../../../commands/PostContentCommand.ts","name":null,"original":{"line":109,"column":4},"generated":{"line":94,"column":15}},{"source":"../../../commands/PostContentCommand.ts","name":null,"original":{"line":109,"column":4},"generated":{"line":94,"column":16}},{"source":"../../../commands/PostContentCommand.ts","name":null,"original":{"line":109,"column":4},"generated":{"line":94,"column":20}},{"source":"../../../commands/PostContentCommand.ts","name":null,"original":{"line":109,"column":11},"generated":{"line":94,"column":25}},{"source":"../../../commands/PostContentCommand.ts","name":null,"original":{"line":107,"column":2},"generated":{"line":94,"column":29}},{"source":"../../../commands/PostContentCommand.ts","name":null,"original":{"line":107,"column":23},"generated":{"line":96,"column":0}},{"source":"../../../commands/PostContentCommand.ts","name":null,"original":{"line":107,"column":23},"generated":{"line":96,"column":4}},{"source":"../../../commands/PostContentCommand.ts","name":null,"original":{"line":107,"column":23},"generated":{"line":96,"column":9}},{"source":"../../../commands/PostContentCommand.ts","name":null,"original":{"line":107,"column":23},"generated":{"line":96,"column":10}},{"source":"../../../commands/PostContentCommand.ts","name":null,"original":{"line":107,"column":23},"generated":{"line":96,"column":15}},{"source":"../../../commands/PostContentCommand.ts","name":null,"original":{"line":107,"column":23},"generated":{"line":96,"column":18}},{"source":"../../../commands/PostContentCommand.ts","name":null,"original":{"line":107,"column":23},"generated":{"line":96,"column":23}},{"source":"../../../commands/PostContentCommand.ts","name":null,"original":{"line":107,"column":53},"generated":{"line":97,"column":17}},{"source":"../../../commands/PostContentCommand.ts","name":null,"original":{"line":110,"column":4},"generated":{"line":97,"column":18}},{"source":"../../../commands/PostContentCommand.ts","name":null,"original":{"line":111,"column":3},"generated":{"line":98,"column":0}},{"source":"../../../commands/PostContentCommand.ts","name":null,"original":{"line":113,"column":2},"generated":{"line":99,"column":0}},{"source":"../../../commands/PostContentCommand.ts","name":null,"original":{"line":116,"column":2},"generated":{"line":104,"column":0}},{"source":"../../../commands/PostContentCommand.ts","name":null,"original":{"line":116,"column":2},"generated":{"line":104,"column":2}},{"source":"../../../commands/PostContentCommand.ts","name":null,"original":{"line":116,"column":2},"generated":{"line":104,"column":20}},{"source":"../../../commands/PostContentCommand.ts","name":null,"original":{"line":116,"column":2},"generated":{"line":104,"column":21}},{"source":"../../../commands/PostContentCommand.ts","name":null,"original":{"line":116,"column":2},"generated":{"line":104,"column":30}},{"source":"../../../commands/PostContentCommand.ts","name":null,"original":{"line":116,"column":2},"generated":{"line":104,"column":31}},{"source":"../../../commands/PostContentCommand.ts","name":null,"original":{"line":116,"column":2},"generated":{"line":104,"column":48}},{"source":"../../../commands/PostContentCommand.ts","name":null,"original":{"line":116,"column":2},"generated":{"line":104,"column":51}},{"source":"../../../commands/PostContentCommand.ts","name":null,"original":{"line":117,"column":4},"generated":{"line":104,"column":61}},{"source":"../../../commands/PostContentCommand.ts","name":null,"original":{"line":116,"column":2},"generated":{"line":104,"column":72}},{"source":"../../../commands/PostContentCommand.ts","name":null,"original":{"line":118,"column":4},"generated":{"line":104,"column":74}},{"source":"../../../commands/PostContentCommand.ts","name":null,"original":{"line":116,"column":2},"generated":{"line":104,"column":87}},{"source":"../../../commands/PostContentCommand.ts","name":null,"original":{"line":119,"column":4},"generated":{"line":104,"column":89}},{"source":"../../../commands/PostContentCommand.ts","name":null,"original":{"line":116,"column":2},"generated":{"line":104,"column":96}},{"source":"../../../commands/PostContentCommand.ts","name":null,"original":{"line":119,"column":34},"generated":{"line":104,"column":98}},{"source":"../../../commands/PostContentCommand.ts","name":null,"original":{"line":121,"column":4},"generated":{"line":105,"column":0}},{"source":"../../../commands/PostContentCommand.ts","name":null,"original":{"line":121,"column":9},"generated":{"line":105,"column":9}},{"source":"../../../commands/PostContentCommand.ts","name":null,"original":{"line":121,"column":4},"generated":{"line":105,"column":24}},{"source":"../../../commands/PostContentCommand.ts","name":null,"original":{"line":121,"column":25},"generated":{"line":105,"column":25}},{"source":"../../../commands/PostContentCommand.ts","name":null,"original":{"line":121,"column":4},"generated":{"line":105,"column":28}},{"source":"../../../commands/PostContentCommand.ts","name":null,"original":{"line":121,"column":29},"generated":{"line":105,"column":29}},{"source":"../../../commands/PostContentCommand.ts","name":null,"original":{"line":121,"column":44},"generated":{"line":105,"column":66}},{"source":"../../../commands/PostContentCommand.ts","name":null,"original":{"line":121,"column":29},"generated":{"line":105,"column":79}},{"source":"../../../commands/PostContentCommand.ts","name":null,"original":{"line":121,"column":59},"generated":{"line":105,"column":81}},{"source":"../../../commands/PostContentCommand.ts","name":null,"original":{"line":121,"column":64},"generated":{"line":105,"column":86}},{"source":"../../../commands/PostContentCommand.ts","name":null,"original":{"line":121,"column":29},"generated":{"line":105,"column":95}},{"source":"../../../commands/PostContentCommand.ts","name":null,"original":{"line":121,"column":75},"generated":{"line":105,"column":97}},{"source":"../../../commands/PostContentCommand.ts","name":null,"original":{"line":121,"column":80},"generated":{"line":105,"column":102}},{"source":"../../../commands/PostContentCommand.ts","name":null,"original":{"line":121,"column":29},"generated":{"line":105,"column":113}},{"source":"../../../commands/PostContentCommand.ts","name":null,"original":{"line":121,"column":4},"generated":{"line":105,"column":114}},{"source":"../../../commands/PostContentCommand.ts","name":null,"original":{"line":123,"column":4},"generated":{"line":106,"column":0}},{"source":"../../../commands/PostContentCommand.ts","name":null,"original":{"line":123,"column":10},"generated":{"line":106,"column":8}},{"source":"../../../commands/PostContentCommand.ts","name":null,"original":{"line":123,"column":15},"generated":{"line":106,"column":13}},{"source":"../../../commands/PostContentCommand.ts","name":null,"original":{"line":123,"column":18},"generated":{"line":106,"column":16}},{"source":"../../../commands/PostContentCommand.ts","name":null,"original":{"line":123,"column":29},"generated":{"line":106,"column":27}},{"source":"../../../commands/PostContentCommand.ts","name":null,"original":{"line":123,"column":30},"generated":{"line":106,"column":28}},{"source":"../../../commands/PostContentCommand.ts","name":null,"original":{"line":123,"column":18},"generated":{"line":106,"column":34}},{"source":"../../../commands/PostContentCommand.ts","name":null,"original":{"line":123,"column":37},"generated":{"line":106,"column":35}},{"source":"../../../commands/PostContentCommand.ts","name":null,"original":{"line":123,"column":42},"generated":{"line":106,"column":40}},{"source":"../../../commands/PostContentCommand.ts","name":null,"original":{"line":123,"column":18},"generated":{"line":106,"column":55}},{"source":"../../../commands/PostContentCommand.ts","name":null,"original":{"line":123,"column":4},"generated":{"line":106,"column":56}},{"source":"../../../commands/PostContentCommand.ts","name":null,"original":{"line":125,"column":12},"generated":{"line":107,"column":0}},{"source":"../../../commands/PostContentCommand.ts","name":null,"original":{"line":125,"column":12},"generated":{"line":107,"column":8}},{"source":"../../../commands/PostContentCommand.ts","name":null,"original":{"line":125,"column":18},"generated":{"line":107,"column":14}},{"source":"../../../commands/PostContentCommand.ts","name":null,"original":{"line":125,"column":23},"generated":{"line":107,"column":17}},{"source":"../../../commands/PostContentCommand.ts","name":null,"original":{"line":125,"column":36},"generated":{"line":107,"column":30}},{"source":"../../../commands/PostContentCommand.ts","name":null,"original":{"line":125,"column":36},"generated":{"line":107,"column":31}},{"source":"../../../commands/PostContentCommand.ts","name":null,"original":{"line":125,"column":12},"generated":{"line":107,"column":37}},{"source":"../../../commands/PostContentCommand.ts","name":null,"original":{"line":126,"column":4},"generated":{"line":108,"column":0}},{"source":"../../../commands/PostContentCommand.ts","name":null,"original":{"line":126,"column":10},"generated":{"line":108,"column":8}},{"source":"../../../commands/PostContentCommand.ts","name":null,"original":{"line":126,"column":20},"generated":{"line":108,"column":18}},{"source":"../../../commands/PostContentCommand.ts","name":null,"original":{"line":126,"column":23},"generated":{"line":108,"column":21}},{"source":"../../../commands/PostContentCommand.ts","name":null,"original":{"line":126,"column":4},"generated":{"line":108,"column":46}},{"source":"../../../commands/PostContentCommand.ts","name":null,"original":{"line":127,"column":4},"generated":{"line":109,"column":0}},{"source":"../../../commands/PostContentCommand.ts","name":null,"original":{"line":127,"column":10},"generated":{"line":109,"column":8}},{"source":"../../../commands/PostContentCommand.ts","name":null,"original":{"line":127,"column":21},"generated":{"line":109,"column":19}},{"source":"../../../commands/PostContentCommand.ts","name":null,"original":{"line":127,"column":24},"generated":{"line":109,"column":22}},{"source":"../../../commands/PostContentCommand.ts","name":null,"original":{"line":127,"column":4},"generated":{"line":109,"column":42}},{"source":"../../../commands/PostContentCommand.ts","name":null,"original":{"line":128,"column":4},"generated":{"line":110,"column":0}},{"source":"../../../commands/PostContentCommand.ts","name":null,"original":{"line":128,"column":10},"generated":{"line":110,"column":8}},{"source":"../../../commands/PostContentCommand.ts","name":null,"original":{"line":128,"column":33},"generated":{"line":110,"column":31}},{"source":"../../../commands/PostContentCommand.ts","name":null,"original":{"line":128,"column":61},"generated":{"line":110,"column":34}},{"source":"../../../commands/PostContentCommand.ts","name":null,"original":{"line":129,"column":6},"generated":{"line":111,"column":0}},{"source":"../../../commands/PostContentCommand.ts","name":null,"original":{"line":129,"column":6},"generated":{"line":111,"column":6}},{"source":"../../../commands/PostContentCommand.ts","name":null,"original":{"line":129,"column":12},"generated":{"line":111,"column":12}},{"source":"../../../commands/PostContentCommand.ts","name":null,"original":{"line":129,"column":12},"generated":{"line":111,"column":14}},{"source":"../../../commands/PostContentCommand.ts","name":null,"original":{"line":128,"column":61},"generated":{"line":111,"column":20}},{"source":"../../../commands/PostContentCommand.ts","name":null,"original":{"line":130,"column":6},"generated":{"line":112,"column":0}},{"source":"../../../commands/PostContentCommand.ts","name":null,"original":{"line":130,"column":6},"generated":{"line":112,"column":6}},{"source":"../../../commands/PostContentCommand.ts","name":null,"original":{"line":130,"column":16},"generated":{"line":112,"column":16}},{"source":"../../../commands/PostContentCommand.ts","name":null,"original":{"line":130,"column":16},"generated":{"line":112,"column":18}},{"source":"../../../commands/PostContentCommand.ts","name":null,"original":{"line":128,"column":61},"generated":{"line":112,"column":28}},{"source":"../../../commands/PostContentCommand.ts","name":null,"original":{"line":131,"column":6},"generated":{"line":113,"column":0}},{"source":"../../../commands/PostContentCommand.ts","name":null,"original":{"line":131,"column":6},"generated":{"line":113,"column":6}},{"source":"../../../commands/PostContentCommand.ts","name":null,"original":{"line":131,"column":17},"generated":{"line":113,"column":17}},{"source":"../../../commands/PostContentCommand.ts","name":null,"original":{"line":131,"column":17},"generated":{"line":113,"column":19}},{"source":"../../../commands/PostContentCommand.ts","name":null,"original":{"line":128,"column":61},"generated":{"line":113,"column":30}},{"source":"../../../commands/PostContentCommand.ts","name":null,"original":{"line":132,"column":6},"generated":{"line":114,"column":0}},{"source":"../../../commands/PostContentCommand.ts","name":null,"original":{"line":132,"column":6},"generated":{"line":114,"column":6}},{"source":"../../../commands/PostContentCommand.ts","name":null,"original":{"line":132,"column":29},"generated":{"line":114,"column":29}},{"source":"../../../commands/PostContentCommand.ts","name":null,"original":{"line":132,"column":31},"generated":{"line":114,"column":31}},{"source":"../../../commands/PostContentCommand.ts","name":null,"original":{"line":132,"column":50},"generated":{"line":114,"column":59}},{"source":"../../../commands/PostContentCommand.ts","name":null,"original":{"line":128,"column":61},"generated":{"line":114,"column":77}},{"source":"../../../commands/PostContentCommand.ts","name":null,"original":{"line":133,"column":6},"generated":{"line":115,"column":0}},{"source":"../../../commands/PostContentCommand.ts","name":null,"original":{"line":133,"column":6},"generated":{"line":115,"column":6}},{"source":"../../../commands/PostContentCommand.ts","name":null,"original":{"line":133,"column":30},"generated":{"line":115,"column":30}},{"source":"../../../commands/PostContentCommand.ts","name":null,"original":{"line":133,"column":32},"generated":{"line":115,"column":32}},{"source":"../../../commands/PostContentCommand.ts","name":null,"original":{"line":133,"column":52},"generated":{"line":115,"column":61}},{"source":"../../../commands/PostContentCommand.ts","name":null,"original":{"line":128,"column":61},"generated":{"line":116,"column":0}},{"source":"../../../commands/PostContentCommand.ts","name":null,"original":{"line":128,"column":4},"generated":{"line":116,"column":5}},{"source":"../../../commands/PostContentCommand.ts","name":null,"original":{"line":135,"column":12},"generated":{"line":117,"column":0}},{"source":"../../../commands/PostContentCommand.ts","name":null,"original":{"line":135,"column":12},"generated":{"line":117,"column":8}},{"source":"../../../commands/PostContentCommand.ts","name":null,"original":{"line":135,"column":26},"generated":{"line":117,"column":22}},{"source":"../../../commands/PostContentCommand.ts","name":null,"original":{"line":135,"column":31},"generated":{"line":117,"column":25}},{"source":"../../../commands/PostContentCommand.ts","name":null,"original":{"line":135,"column":44},"generated":{"line":117,"column":38}},{"source":"../../../commands/PostContentCommand.ts","name":null,"original":{"line":135,"column":44},"generated":{"line":117,"column":39}},{"source":"../../../commands/PostContentCommand.ts","name":null,"original":{"line":135,"column":12},"generated":{"line":117,"column":53}},{"source":"../../../commands/PostContentCommand.ts","name":null,"original":{"line":136,"column":4},"generated":{"line":118,"column":0}},{"source":"../../../commands/PostContentCommand.ts","name":null,"original":{"line":136,"column":11},"generated":{"line":118,"column":11}},{"source":"../../../commands/PostContentCommand.ts","name":null,"original":{"line":136,"column":16},"generated":{"line":118,"column":16}},{"source":"../../../commands/PostContentCommand.ts","name":null,"original":{"line":136,"column":17},"generated":{"line":118,"column":17}},{"source":"../../../commands/PostContentCommand.ts","name":null,"original":{"line":136,"column":11},"generated":{"line":118,"column":24}},{"source":"../../../commands/PostContentCommand.ts","name":null,"original":{"line":137,"column":6},"generated":{"line":118,"column":25}},{"source":"../../../commands/PostContentCommand.ts","name":null,"original":{"line":137,"column":7},"generated":{"line":118,"column":35}},{"source":"../../../commands/PostContentCommand.ts","name":null,"original":{"line":137,"column":6},"generated":{"line":118,"column":42}},{"source":"../../../commands/PostContentCommand.ts","name":null,"original":{"line":137,"column":45},"generated":{"line":118,"column":44}},{"source":"../../../commands/PostContentCommand.ts","name":null,"original":{"line":138,"column":8},"generated":{"line":119,"column":0}},{"source":"../../../commands/PostContentCommand.ts","name":null,"original":{"line":138,"column":8},"generated":{"line":119,"column":13}},{"source":"../../../commands/PostContentCommand.ts","name":null,"original":{"line":138,"column":22},"generated":{"line":119,"column":27}},{"source":"../../../commands/PostContentCommand.ts","name":null,"original":{"line":138,"column":23},"generated":{"line":119,"column":28}},{"source":"../../../commands/PostContentCommand.ts","name":null,"original":{"line":138,"column":8},"generated":{"line":119,"column":34}},{"source":"../../../commands/PostContentCommand.ts","name":null,"original":{"line":138,"column":30},"generated":{"line":119,"column":35}},{"source":"../../../commands/PostContentCommand.ts","name":null,"original":{"line":138,"column":37},"generated":{"line":119,"column":42}},{"source":"../../../commands/PostContentCommand.ts","name":null,"original":{"line":138,"column":38},"generated":{"line":119,"column":43}},{"source":"../../../commands/PostContentCommand.ts","name":null,"original":{"line":138,"column":8},"generated":{"line":119,"column":50}},{"source":"../../../commands/PostContentCommand.ts","name":null,"original":{"line":138,"column":64},"generated":{"line":119,"column":52}},{"source":"../../../commands/PostContentCommand.ts","name":null,"original":{"line":138,"column":71},"generated":{"line":119,"column":59}},{"source":"../../../commands/PostContentCommand.ts","name":null,"original":{"line":138,"column":75},"generated":{"line":119,"column":63}},{"source":"../../../commands/PostContentCommand.ts","name":null,"original":{"line":138,"column":8},"generated":{"line":119,"column":65}},{"source":"../../../commands/PostContentCommand.ts","name":null,"original":{"line":138,"column":8},"generated":{"line":119,"column":66}},{"source":"../../../commands/PostContentCommand.ts","name":null,"original":{"line":138,"column":78},"generated":{"line":120,"column":0}},{"source":"../../../commands/PostContentCommand.ts","name":null,"original":{"line":136,"column":11},"generated":{"line":120,"column":5}},{"source":"../../../commands/PostContentCommand.ts","name":null,"original":{"line":139,"column":6},"generated":{"line":120,"column":7}},{"source":"../../../commands/PostContentCommand.ts","name":null,"original":{"line":136,"column":11},"generated":{"line":120,"column":30}},{"source":"../../../commands/PostContentCommand.ts","name":null,"original":{"line":136,"column":4},"generated":{"line":120,"column":31}},{"source":"../../../commands/PostContentCommand.ts","name":null,"original":{"line":141,"column":3},"generated":{"line":121,"column":0}},{"source":"../../../commands/PostContentCommand.ts","name":null,"original":{"line":116,"column":2},"generated":{"line":121,"column":3}},{"source":"../../../commands/PostContentCommand.ts","name":null,"original":{"line":143,"column":10},"generated":{"line":123,"column":0}},{"source":"../../../commands/PostContentCommand.ts","name":null,"original":{"line":143,"column":10},"generated":{"line":123,"column":2}},{"source":"../../../commands/PostContentCommand.ts","name":null,"original":{"line":143,"column":10},"generated":{"line":123,"column":20}},{"source":"../../../commands/PostContentCommand.ts","name":null,"original":{"line":143,"column":10},"generated":{"line":123,"column":21}},{"source":"../../../commands/PostContentCommand.ts","name":null,"original":{"line":143,"column":10},"generated":{"line":123,"column":30}},{"source":"../../../commands/PostContentCommand.ts","name":null,"original":{"line":143,"column":10},"generated":{"line":123,"column":31}},{"source":"../../../commands/PostContentCommand.ts","name":null,"original":{"line":143,"column":10},"generated":{"line":123,"column":40}},{"source":"../../../commands/PostContentCommand.ts","name":null,"original":{"line":143,"column":2},"generated":{"line":123,"column":43}},{"source":"../../../commands/PostContentCommand.ts","name":null,"original":{"line":143,"column":20},"generated":{"line":123,"column":53}},{"source":"../../../commands/PostContentCommand.ts","name":null,"original":{"line":143,"column":2},"generated":{"line":123,"column":58}},{"source":"../../../commands/PostContentCommand.ts","name":null,"original":{"line":143,"column":52},"generated":{"line":123,"column":60}},{"source":"../../../commands/PostContentCommand.ts","name":null,"original":{"line":143,"column":2},"generated":{"line":123,"column":67}},{"source":"../../../commands/PostContentCommand.ts","name":null,"original":{"line":143,"column":75},"generated":{"line":123,"column":69}},{"source":"../../../commands/PostContentCommand.ts","name":null,"original":{"line":144,"column":4},"generated":{"line":124,"column":0}},{"source":"../../../commands/PostContentCommand.ts","name":null,"original":{"line":144,"column":11},"generated":{"line":124,"column":11}},{"source":"../../../commands/PostContentCommand.ts","name":null,"original":{"line":144,"column":52},"generated":{"line":124,"column":71}},{"source":"../../../commands/PostContentCommand.ts","name":null,"original":{"line":144,"column":11},"generated":{"line":124,"column":76}},{"source":"../../../commands/PostContentCommand.ts","name":null,"original":{"line":144,"column":59},"generated":{"line":124,"column":78}},{"source":"../../../commands/PostContentCommand.ts","name":null,"original":{"line":144,"column":11},"generated":{"line":124,"column":85}},{"source":"../../../commands/PostContentCommand.ts","name":null,"original":{"line":144,"column":4},"generated":{"line":124,"column":86}},{"source":"../../../commands/PostContentCommand.ts","name":null,"original":{"line":145,"column":3},"generated":{"line":125,"column":0}},{"source":"../../../commands/PostContentCommand.ts","name":null,"original":{"line":143,"column":10},"generated":{"line":125,"column":3}},{"source":"../../../commands/PostContentCommand.ts","name":null,"original":{"line":147,"column":10},"generated":{"line":127,"column":0}},{"source":"../../../commands/PostContentCommand.ts","name":null,"original":{"line":147,"column":10},"generated":{"line":127,"column":2}},{"source":"../../../commands/PostContentCommand.ts","name":null,"original":{"line":147,"column":10},"generated":{"line":127,"column":20}},{"source":"../../../commands/PostContentCommand.ts","name":null,"original":{"line":147,"column":10},"generated":{"line":127,"column":21}},{"source":"../../../commands/PostContentCommand.ts","name":null,"original":{"line":147,"column":10},"generated":{"line":127,"column":30}},{"source":"../../../commands/PostContentCommand.ts","name":null,"original":{"line":147,"column":10},"generated":{"line":127,"column":31}},{"source":"../../../commands/PostContentCommand.ts","name":null,"original":{"line":147,"column":10},"generated":{"line":127,"column":42}},{"source":"../../../commands/PostContentCommand.ts","name":null,"original":{"line":147,"column":2},"generated":{"line":127,"column":45}},{"source":"../../../commands/PostContentCommand.ts","name":null,"original":{"line":147,"column":22},"generated":{"line":127,"column":55}},{"source":"../../../commands/PostContentCommand.ts","name":null,"original":{"line":147,"column":2},"generated":{"line":127,"column":61}},{"source":"../../../commands/PostContentCommand.ts","name":null,"original":{"line":147,"column":46},"generated":{"line":127,"column":63}},{"source":"../../../commands/PostContentCommand.ts","name":null,"original":{"line":147,"column":2},"generated":{"line":127,"column":70}},{"source":"../../../commands/PostContentCommand.ts","name":null,"original":{"line":147,"column":69},"generated":{"line":127,"column":72}},{"source":"../../../commands/PostContentCommand.ts","name":null,"original":{"line":148,"column":4},"generated":{"line":128,"column":0}},{"source":"../../../commands/PostContentCommand.ts","name":null,"original":{"line":148,"column":11},"generated":{"line":128,"column":11}},{"source":"../../../commands/PostContentCommand.ts","name":null,"original":{"line":148,"column":54},"generated":{"line":128,"column":73}},{"source":"../../../commands/PostContentCommand.ts","name":null,"original":{"line":148,"column":11},"generated":{"line":128,"column":79}},{"source":"../../../commands/PostContentCommand.ts","name":null,"original":{"line":148,"column":62},"generated":{"line":128,"column":81}},{"source":"../../../commands/PostContentCommand.ts","name":null,"original":{"line":148,"column":11},"generated":{"line":128,"column":88}},{"source":"../../../commands/PostContentCommand.ts","name":null,"original":{"line":148,"column":4},"generated":{"line":128,"column":89}},{"source":"../../../commands/PostContentCommand.ts","name":null,"original":{"line":149,"column":3},"generated":{"line":129,"column":0}},{"source":"../../../commands/PostContentCommand.ts","name":null,"original":{"line":147,"column":10},"generated":{"line":129,"column":3}},{"source":"../../../commands/PostContentCommand.ts","name":null,"original":{"line":153,"column":0},"generated":{"line":131,"column":0}},{"source":"../../../commands/PostContentCommand.ts","name":null,"original":{"line":153,"column":0},"generated":{"line":131,"column":9}},{"source":"../../../commands/PostContentCommand.ts","name":null,"original":{"line":153,"column":0},"generated":{"line":131,"column":27}},{"source":"../../../commands/PostContentCommand.ts","name":null,"original":{"line":99,"column":0},"generated":{"line":132,"column":0}},{"source":"../../../commands/PostContentCommand.ts","name":null,"original":{"line":99,"column":0},"generated":{"line":132,"column":1}},{"source":"../../../commands/PostContentCommand.ts","name":null,"original":{"line":99,"column":40},"generated":{"line":132,"column":2}},{"source":"../../../commands/PostContentCommand.ts","name":null,"original":{"line":99,"column":0},"generated":{"line":132,"column":23}},{"source":"../../../commands/PostContentCommand.ts","name":null,"original":{"line":99,"column":0},"generated":{"line":132,"column":24}}],"sources":{"../../../commands/PostContentCommand.ts":"import {\n  LexRuntimeServiceClientResolvedConfig,\n  ServiceInputTypes,\n  ServiceOutputTypes,\n} from \"../LexRuntimeServiceClient\";\nimport { PostContentRequest, PostContentResponse } from \"../models/models_0\";\nimport {\n  deserializeAws_restJson1PostContentCommand,\n  serializeAws_restJson1PostContentCommand,\n} from \"../protocols/Aws_restJson1\";\nimport { getSerdePlugin } from \"@aws-sdk/middleware-serde\";\nimport { HttpRequest as __HttpRequest, HttpResponse as __HttpResponse } from \"@aws-sdk/protocol-http\";\nimport { Command as $Command } from \"@aws-sdk/smithy-client\";\nimport {\n  FinalizeHandlerArguments,\n  Handler,\n  HandlerExecutionContext,\n  MiddlewareStack,\n  HttpHandlerOptions as __HttpHandlerOptions,\n  MetadataBearer as __MetadataBearer,\n  SerdeContext as __SerdeContext,\n} from \"@aws-sdk/types\";\n\nexport type PostContentCommandInput = Omit<PostContentRequest, \"inputStream\"> & {\n  inputStream: PostContentRequest[\"inputStream\"] | string | Uint8Array | Buffer;\n};\nexport type PostContentCommandOutput = PostContentResponse & __MetadataBearer;\n\n/**\n * <p> Sends user input (text or speech) to Amazon Lex. Clients use this API to send text and audio\n *       requests to Amazon Lex at runtime. Amazon Lex interprets the user input using the machine learning model\n *       that it built for the bot. </p>\n *          <p>The <code>PostContent</code> operation supports audio input at 8kHz and 16kHz. You can use\n *       8kHz audio to achieve higher speech recognition accuracy in telephone audio applications. </p>\n *          <p> In response, Amazon Lex returns the next message to convey to the user. Consider the following\n *       example messages: </p>\n *          <ul>\n *             <li>\n *                <p> For a user input \"I would like a pizza,\" Amazon Lex might return a response with a message\n *           eliciting slot data (for example, <code>PizzaSize</code>): \"What size pizza would you\n *           like?\". </p>\n *             </li>\n *             <li>\n *                <p> After the user provides all of the pizza order information, Amazon Lex might return a\n *           response with a message to get user confirmation: \"Order the pizza?\". </p>\n *             </li>\n *             <li>\n *                <p> After the user replies \"Yes\" to the confirmation prompt, Amazon Lex might return a\n *           conclusion statement: \"Thank you, your cheese pizza has been ordered.\". </p>\n *             </li>\n *          </ul>\n *          <p> Not all Amazon Lex messages require a response from the user. For example, conclusion\n *       statements do not require a response. Some messages require only a yes or no response. In\n *       addition to the <code>message</code>, Amazon Lex provides additional context about the message in\n *       the response that you can use to enhance client behavior, such as displaying the appropriate\n *       client user interface. Consider the following examples: </p>\n *          <ul>\n *             <li>\n *                <p> If the message is to elicit slot data, Amazon Lex returns the following context\n *           information: </p>\n *                <ul>\n *                   <li>\n *                      <p>\n *                         <code>x-amz-lex-dialog-state</code> header set to <code>ElicitSlot</code>\n *                      </p>\n *                   </li>\n *                   <li>\n *                      <p>\n *                         <code>x-amz-lex-intent-name</code> header set to the intent name in the current\n *               context </p>\n *                   </li>\n *                   <li>\n *                      <p>\n *                         <code>x-amz-lex-slot-to-elicit</code> header set to the slot name for which the\n *                 <code>message</code> is eliciting information </p>\n *                   </li>\n *                   <li>\n *                      <p>\n *                         <code>x-amz-lex-slots</code> header set to a map of slots configured for the intent\n *               with their current values </p>\n *                   </li>\n *                </ul>\n *             </li>\n *             <li>\n *                <p> If the message is a confirmation prompt, the <code>x-amz-lex-dialog-state</code>\n *           header is set to <code>Confirmation</code> and the <code>x-amz-lex-slot-to-elicit</code>\n *           header is omitted. </p>\n *             </li>\n *             <li>\n *                <p> If the message is a clarification prompt configured for the intent, indicating that\n *           the user intent is not understood, the <code>x-amz-dialog-state</code> header is set to\n *             <code>ElicitIntent</code> and the <code>x-amz-slot-to-elicit</code> header is omitted.\n *         </p>\n *             </li>\n *          </ul>\n *          <p> In addition, Amazon Lex also returns your application-specific <code>sessionAttributes</code>.\n *       For more information, see <a href=\"https://docs.aws.amazon.com/lex/latest/dg/context-mgmt.html\">Managing Conversation Context</a>. </p>\n */\nexport class PostContentCommand extends $Command<\n  PostContentCommandInput,\n  PostContentCommandOutput,\n  LexRuntimeServiceClientResolvedConfig\n> {\n  // Start section: command_properties\n  // End section: command_properties\n\n  constructor(readonly input: PostContentCommandInput) {\n    // Start section: command_constructor\n    super();\n    // End section: command_constructor\n  }\n\n  /**\n   * @internal\n   */\n  resolveMiddleware(\n    clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>,\n    configuration: LexRuntimeServiceClientResolvedConfig,\n    options?: __HttpHandlerOptions\n  ): Handler<PostContentCommandInput, PostContentCommandOutput> {\n    this.middlewareStack.use(getSerdePlugin(configuration, this.serialize, this.deserialize));\n\n    const stack = clientStack.concat(this.middlewareStack);\n\n    const { logger } = configuration;\n    const clientName = \"LexRuntimeServiceClient\";\n    const commandName = \"PostContentCommand\";\n    const handlerExecutionContext: HandlerExecutionContext = {\n      logger,\n      clientName,\n      commandName,\n      inputFilterSensitiveLog: PostContentRequest.filterSensitiveLog,\n      outputFilterSensitiveLog: PostContentResponse.filterSensitiveLog,\n    };\n    const { requestHandler } = configuration;\n    return stack.resolve(\n      (request: FinalizeHandlerArguments<any>) =>\n        requestHandler.handle(request.request as __HttpRequest, options || {}),\n      handlerExecutionContext\n    );\n  }\n\n  private serialize(input: PostContentCommandInput, context: __SerdeContext): Promise<__HttpRequest> {\n    return serializeAws_restJson1PostContentCommand(input, context);\n  }\n\n  private deserialize(output: __HttpResponse, context: __SerdeContext): Promise<PostContentCommandOutput> {\n    return deserializeAws_restJson1PostContentCommand(output, context);\n  }\n\n  // Start section: command_body_extra\n  // End section: command_body_extra\n}\n"},"lineCount":null}},"error":null,"hash":"abf904b77a0f6c62c8b4b818956b0794","cacheData":{"env":{}}}